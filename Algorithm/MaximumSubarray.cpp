////////////////////////////////////////////////////////////////////////////////////////////
//  给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
////////////////////////////////////////////////////////////////////////////////////////////
//  https://leetcode-cn.com/problems/maximum-subarray/description/
////////////////////////////////////////////////////////////////////////////////////////////
//  需要优化，执行速度太慢
////////////////////////////////////////////////////////////////////////////////////////////

class Solution 
{
    public:
    
    int maxSubArray(vector<int>& nums) 
    {
        int max = INT_MIN;
        
        int current;
        
        for (int i = 0; i < nums.size(); i++)
        {
            current = 0;
            
            for (int j = i; j < nums.size(); j++)
            {
                current += nums[j];
                
                if (current > max)
                {
                    max = current;
                }
            }
        }
        
        return max;
    }
};
